services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.dev.offline
    command: deno task dev
    ports:
      - "5173:5173"
    env_file:
      - ./apps/webapp/db.local.env
    networks:
      - offline-dev-network
    depends_on:
      postgres:
        condition: service_healthy
  
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.dev.offline
      target: migrator
    command: nessie migrate
    env_file:
      - ./apps/webapp/db.local.env
    networks:
      - offline-dev-network
    depends_on:
      postgres:
        condition: service_healthy
  
  seed:
    build:
      context: .
      dockerfile: Dockerfile.dev.offline
      target: migrator
    command: nessie seed
    env_file:
      - ./apps/webapp/db.local.env
    networks:
      - offline-dev-network
    depends_on:
      - migrate
    profiles: ["seed"]
  
  postgres:
    image: postgres:17.2
    env_file:
      - ./apps/webapp/db.local.env
    ports:
      - "5432:5432"
    volumes:
      - trust_assembly_data_offline_dev:/var/lib/postgresql/data
    networks:
      - offline-dev-network
    healthcheck:
      test: ["CMD-SHELL", "runuser", "-u", "postgres", "--", "pg_isready"]
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 10s

volumes:
  trust_assembly_data_offline_dev:
    driver: local

networks:
  offline-dev-network:
    driver: bridge
    internal: false  # Set to true for completely offline operation